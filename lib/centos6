#!/bin/bash -e
initial_setup() {
  DKEYFILE="/tmp/key.pub"
  JENKINSDIR="${HOMEDIR}/jenkins-slave"
  print_info_increasing_open_files
  sed -i -e 's/*\s\+soft\s\+nproc\s\+1024/* soft nproc 3869/' /etc/security/limits.d/90-nproc.conf
  print_info_updating_system
  yum -q clean all > /dev/null
  yum -y -q update > /dev/null
  print_info_installing_epel
  yum -y -q install epel-release > /dev/null
  sed -i -e 's/mirrorlist=/#mirrorlist=/g' /etc/yum.repos.d/epel*.repo
  sed -i -e 's/#baseurl=/baseurl=/g' /etc/yum.repos.d/epel*.repo
  print_info_installing_dependencies
  yum -y -q install gcc java-1.7.0-openjdk lsof git rpm-build wget gcc-c++ automake pkgconfig libxml2-devel libcurl-devel openssl-devel python-devel python-pip htop ntpdate > /dev/null
  print_info_configuring_ntp
  echo -e 'server 0.pool.ntp.org\nserver 1.pool.ntp.org\nserver 2.pool.ntp.org\nserver 3.pool.ntp.org' > /etc/ntp.conf
  service ntpdate start
  chkconfig ntpdate on
  if [ ! -f /var/swap ]; then
    print_info_config_swap_file
    dd if=/dev/zero of=/var/swap bs=1024 count=512k
    mkswap /var/swap
    swapon /var/swap
    echo "/var/swap          swap            swap    defaults        0 0" >> /etc/fstab
  fi
  if [ ! -d ${JENKINSDIR} ]; then
    print_info_installing_jenkins_slave
    mkdir ${JENKINSDIR}
    wget -q https://jenkins-juliogonzalez.rhcloud.com/jnlpJars/slave.jar -O ${JENKINSDIR}/slave.jar
    chown -R centos:centos ${JENKINSDIR}
  fi
  print_info_config_sudo "centos"
  echo 'Defaults:centos !requiretty' > /etc/sudoers.d/centos-notty
  chmod 440 /etc/sudoers.d/centos-notty
}

remove_chroot() {
  umount ${CHROOTDIR}/home
  umount ${CHROOTDIR}/sys/
  umount ${CHROOTDIR}/proc/
  umount -l ${CHROOTDIR}/dev/
  # Delete all lines from /etc/fstab related to the jail
  sed -i -e "/$(echo ${CHROOTDIR}|sed -e 's/\//\\\//g')/d" /etc/fstab
  rm -rf ${CHROOTDIR}
}

create_chroot() {
  local CENTOS_RPM="http://mirror.centos.org/centos/6/os/${ARCHITECTURE}/Packages/centos-release-6-7.el6.centos.12.3.${ARCHITECTURE2}.rpm"
  export PGSQL_REPO="http://yum.postgresql.org/${SHORTDOTVER}/redhat/rhel-6-${ARCHITECTURE}/"
  print_info_creating_basic_jail
  mkdir -p ${CHROOTDIR}/var/lib/rpm
  rpm --quiet --rebuilddb --root=${CHROOTDIR}
  rpm -i --quiet --root=${CHROOTDIR} --nodeps ${CENTOS_RPM}
  yum --installroot=${CHROOTDIR} install -y -q rpm-build yum > /dev/null
  cp ${CHROOTDIR}/etc/skel/.??* ${CHROOTDIR}/root
  cp /etc/resolv.conf ${CHROOTDIR}/etc/resolv.conf
  cp /etc/sysconfig/network ${CHROOTDIR}/etc/sysconfig/network
  print_info_adjusting_mount_points
  echo "/home ${CHROOTDIR}/home none bind" >> /etc/fstab
  echo "sys ${CHROOTDIR}/sys/ sysfs none" >> /etc/fstab
  echo "proc ${CHROOTDIR}/proc/ proc none" >> /etc/fstab
  echo "/dev ${CHROOTDIR}/dev/ none bind" >> /etc/fstab
  print_info_mounting_mount_points
  mount ${CHROOTDIR}/home
  mount ${CHROOTDIR}/sys/
  mount ${CHROOTDIR}/proc/
  mount ${CHROOTDIR}/dev/
  print_info_running_remaining_chroot_script
  chroot ${CHROOTDIR} /bin/bash +x -e <<'EOF'
# Install postgresql repository
echo "[postgresql-${SHORTVER}]" > /etc/yum.repos.d/postgresql-${SHORTVER}.repo
echo "name=PostgreSQL ${SHORTDOTVER}" >> /etc/yum.repos.d/postgresql-${SHORTVER}.repo
echo "baseurl=${PGSQL_REPO}" >> /etc/yum.repos.d/postgresql-${SHORTVER}.repo
echo "enabled=1" >> /etc/yum.repos.d/postgresql-${SHORTVER}.repo
echo "gpgcheck=0" >> /etc/yum.repos.d/postgresql-${SHORTVER}.repo
# Install EPEL repository
yum -y -q install epel-release  > /dev/null
sed -i -e 's/mirrorlist=/#mirrorlist=/g' /etc/yum.repos.d/epel*.repo
sed -i -e 's/#baseurl=/baseurl=/g' /etc/yum.repos.d/epel*.repo
# Install packages
yum -y -q install sudo postgresql${SHORTVER} postgresql${SHORTVER}-server postgresql${SHORTVER}-libs postgresql${SHORTVER}-devel gcc git rpm-build wget freetds freetds-devel gcc-c++ automake pkgconfig libxml2-devel libcurl-devel openssl-devel python-devel python-pip pyOpenSSL > /dev/null
# Clean yum metadata
yum -y -q clean all > /dev/null
# Initialize PostgreSQL
service postgresql-${SHORTDOTVER} initdb
# Configure port
echo "port = ${PORT}" >> /var/lib/pgsql/${SHORTDOTVER}/data/postgresql.conf
echo "PGPORT=${PORT}" > /etc/sysconfig/pgsql/postgresql-${SHORTDOTVER}
# Minor tunning
sed -i -e 's/shared_buffers = 32MB/shared_buffers = 24MB/' /var/lib/pgsql/${SHORTDOTVER}/data/postgresql.conf
# Allow password connections from localhost
sed -i -r -e 's/host\s+all\s+all\s+127.0.0.1\/32\s+ident/host all all 127.0.0.1\/32 password/' /var/lib/pgsql/${SHORTDOTVER}/data/pg_hba.conf
# Increase the time that the init script will wait for the service to be ready (for slow instances)
sed -i -e 's/sleep 2/sleep 20/' /etc/init.d/postgresql-${SHORTDOTVER}
# Make sure PostgreSQL is stopped
service postgresql-${SHORTDOTVER} stop
# Create user centos and allow it to use sudo
groupadd centos --gid ${GROUPID}
adduser centos -M -G wheel -d ${HOMEDIR} --uid ${USERID} --gid ${GROUPID}
# Allow centos user to use sudo without asking password and without tty
echo 'centos ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/centos
chmod 440 /etc/sudoers.d/centos
echo 'Defaults:centos !requiretty' > /etc/sudoers.d/centos-notty
chmod 440 /etc/sudoers.d/centos-notty
# Install needed python modules
pip install -q ndg-httpsclient pyasn1
PATH=${PATH}:/usr/lib/postgresql/${SHORTDOTVER}/bin/:/usr/pgsql-${SHORTDOTVER}/bin pip install -q psycopg2 pymssql
EOF
# Configure locales for PostgreSQL <= 9.3
if [ ${SHORTVER} -le 93 ]; then
  cp ${FILES_DIR}/locales.conf ${CHROOTDIR}/etc/locales.conf
fi
}
